---
# file: site.yml
# Set up all the Raspberry Pi Compute Nodes
- hosts: compute
  remote_user: 'pi'
  become: yes

  tasks:
  #role:base
  - name: Install essential utils
    apt:
      name:
        - htop
        - nano
        - git
        - tmux

  #role:pisettings
  - name: Pi - install our config.txt
    template:
      src: config.txt.j2
      dest: /boot/config.txt
      owner: root
      group: root
      mode: 0755

  #role:tinysetup
  - name: Install utils from TinySetup
    apt:
      name:
        - vim
        - openmpi-bin
        - xboxdrv
        - libglew-dev
        - sshpass

  #role:sshkeys
  - name: SSH - Add public key to authorized keys
    authorized_key:
      user: pi
      state: present
      key: "{{ lookup('file', 'secrets/ssh/pi.pub') }}"

  - name: SSH - Add private key to all hosts
    copy:
      src: 'secrets/ssh/pi'
      dest: '/home/pi/.ssh/id_rsa'
      owner: pi
      group: pi
      mode: 0600

  #role:hosts
  - name: Setup hosts file to allow short names
    template:
      src: hosts/hosts.j2
      dest: /etc/hosts
      owner: root
      group: root
      mode: 0644

  #role:tinytitan-gitrepos
  - name: Use git to checkout SPH demo
    git:
      version: "master"
      repo: "https://github.com/Zorlin/SPH.git"
      dest: "/home/pi/SPH"
    become_user: pi

  - name: Use git to checkout PiBrot demo
    git:
      version: "master"
      repo: "https://github.com/Zorlin/PiBrot.git"
      dest: "/home/pi/PiBrot"
    become_user: pi

# Set up the prime/"head" node
# This will be used for controlling the simulations
# as well as displaying the results of the simulations.
- hosts: prime
  remote_user: 'pi'
  become: yes

  tasks:
  #role:mpihosts
  - name: Create mpihosts file
    template:
      src: mpi/mpihostsfile.j2
      dest: /home/pi/mpihostsfile
      owner: pi
      group: pi

  - name: Create pi_mpihostsfile as a symlink
    file:
      src: /home/pi/mpihostsfile
      dest: /home/pi/pi_mpihostsfile
      state: link

  #role:startsph
  - name: Init - install custom startsph kiosk script used to start simulations
    template:
      src: startsph.j2
      dest: /home/pi/startsph
      owner: pi
      group: pi
      mode: 0755

  #role:killdemos
  - name: Tools - install a basic script that halts the simulations
    template:
      src: killdemos.sh.j2
      dest: /home/pi/killdemos.sh
      owner: pi
      group: pi
      mode: 0755

  #role:autostart
  - name: Init - Run needed commands for kiosk every boot
    template:
      src: rc.local.j2
      dest: /etc/rc.local
      owner: root
      group: root
      mode: 0755

  #role:dualshock4-experimental
  - name: Apt - Ensure python3 development libraries are installed
    apt:
      name: python3-dev

  - name: Apt - Ensure python3-pip is installed
    apt:
      name: python3-pip

    # You may want to read the "Permissions" section of https://github.com/chrippa/ds4drv
    # to better understand what's going on here.
    # Credit for the rules file goes to user "chrippa" on GitHub.
  - name: Bluetooth and udev - ensure user access to ds4 controller
    copy:
      src: 'udev/50-ds4drv.rules'
      dest: '/etc/udev/rules.d/50-ds4drv.rules'
      owner: root
      group: root
      mode: 0644

  - name: Pip - Install ds4drv (DualShock 4 Userspace Driver)
    pip:
      name: ds4drv
      executable: pip3
      state: latest

  - name: ds4 - Create a configuration file for ds4drv
    template:
      src: 'dualshock/ds4drv.conf'
      dest: '/home/pi/.config/ds4drv.conf'
      owner: pi
      group: pi
      mode: 0644
